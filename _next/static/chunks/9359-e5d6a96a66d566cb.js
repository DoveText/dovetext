"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9359],{9359:function(e,t,r){r.r(t),r.d(t,{AuthProvider:function(){return p},auth:function(){return w},useAuth:function(){return y}});var a=r(3827),o=r(4090),i=r(2730),n=r(6142),s=r(9079);class c{async enrichFirebaseUser(e){if(!e)return null;try{let t=await e.getIdToken(!1),r=await fetch("/api/v1/auth/profile",{headers:{Authorization:"Bearer ".concat(t)}}),a=await r.json();return{uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL,emailVerified:e.emailVerified,isAnonymous:e.isAnonymous,settings:a.settings||{},is_active:a.is_active||!1,email_verified:a.email_verified||e.emailVerified,created_at:new Date(a.created_at||e.metadata.creationTime||Date.now()),updated_at:new Date(a.updated_at||Date.now()),last_login_at:e.metadata.lastSignInTime?new Date(e.metadata.lastSignInTime):void 0,getIdToken:t=>e.getIdToken(t),metadata:{creationTime:e.metadata.creationTime,lastSignInTime:e.metadata.lastSignInTime},providerData:e.providerData.map(e=>({providerId:e.providerId,uid:e.uid,displayName:e.displayName,email:e.email,phoneNumber:e.phoneNumber,photoURL:e.photoURL})),refreshToken:e.refreshToken,tenantId:e.tenantId,delete:()=>e.delete(),reload:()=>e.reload(),toJSON:()=>e.toJSON()}}catch(e){return console.error("Error enriching Firebase user:",e),null}}async getCurrentUser(){let e=this.auth.currentUser;return this.enrichFirebaseUser(e)}async signIn(e,t){try{let r=await (0,i.e5)(this.auth,e,t),a=await this.enrichFirebaseUser(r.user);if(!a)throw Error("Failed to enrich user data after sign in");return a}catch(e){throw console.error("Firebase sign in error:",e),e}}async signUp(e,t){try{let r=await (0,i.Xb)(this.auth,e,t),a=await this.enrichFirebaseUser(r.user);if(!a)throw Error("Failed to enrich user data after sign up");return a}catch(e){throw console.error("Firebase sign up error:",e),e}}async signInWithOAuth(e,t){try{let r;switch(e){case"google":r=new i.hJ;break;case"github":throw Error("GitHub authentication not implemented yet");case"facebook":throw Error("Facebook authentication not implemented yet");case"twitter":throw Error("Twitter authentication not implemented yet");case"microsoft":throw Error("Microsoft authentication not implemented yet");case"apple":throw Error("Apple authentication not implemented yet");default:throw Error("Unsupported OAuth provider: ".concat(e))}(null==t?void 0:t.scopes)&&t.scopes.forEach(e=>{r.addScope&&r.addScope(e)});let a=await (0,i.rh)(this.auth,r),o=await this.enrichFirebaseUser(a.user);if(!o)throw Error("Failed to enrich user data after ".concat(e," sign in"));return o}catch(t){throw console.error("Firebase ".concat(e," sign in error:"),t),t}}async signInWithGoogle(){return this.signInWithOAuth("google")}async logout(){try{await (0,i.w7)(this.auth)}catch(e){throw console.error("Firebase logout error:",e),e}}async sendVerificationEmail(e){try{let t=e||this.auth.currentUser;if(!t)throw Error("No user is signed in");await (0,i.w$)(t)}catch(e){throw console.error("Firebase send verification email error:",e),e}}async applyActionCode(e){try{await (0,i.iA)(this.auth,e)}catch(e){throw console.error("Firebase apply action code error:",e),e}}async sendPasswordResetEmail(e){try{await (0,i.LS)(this.auth,e)}catch(e){throw console.error("Firebase send password reset email error:",e),e}}async confirmPasswordReset(e,t,r){try{await (0,i.LG)(this.auth,e,t)}catch(e){throw console.error("Firebase confirm password reset error:",e),e}}async checkActionCode(e){try{return await (0,i.bX)(this.auth,e)}catch(e){throw console.error("Firebase check action code error:",e),e}}async getIdToken(){try{let e=this.auth.currentUser;if(!e)return null;return await e.getIdToken(!0)}catch(e){return console.error("Firebase get ID token error:",e),null}}onAuthStateChanged(e){return(0,i.Aj)(this.auth,async t=>{e(await this.enrichFirebaseUser(t))})}async refreshUserStatus(){try{let e=this.auth.currentUser;if(!e)throw Error("No user is signed in");let t=await e.getIdToken(!0),r=await fetch("/api/v1/auth/profile",{headers:{Authorization:"Bearer ".concat(t)}});return await r.json()}catch(e){throw console.error("Firebase refresh user status error:",e),e}}getAuthInstance(){return this.auth}constructor(){let e={apiKey:"AIzaSyAf9GrliHvcw1c7FzPhcBGq0KFYyNtJrgQ",authDomain:"dove-text.firebaseapp.com",projectId:"dove-text",storageBucket:s.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,messagingSenderId:s.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,appId:s.env.NEXT_PUBLIC_FIREBASE_APP_ID,measurementId:s.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID},t=0===(0,n.C6)().length?(0,n.ZF)(e):(0,n.C6)()[0];this.auth=(0,i.v0)(t)}}class h{static getInstance(){return h.instance||(h.instance=new h),h.instance}getUser(){return this.currentUser}setUser(e){this.currentUser=e,this.listeners.forEach(t=>t(e))}getToken(){return this.authToken}setToken(e){this.authToken=e,e?localStorage.setItem("local_auth_token",e):localStorage.removeItem("local_auth_token")}addListener(e){return this.listeners.push(e),()=>{this.listeners=this.listeners.filter(t=>t!==e)}}init(){{let e=localStorage.getItem("local_auth_token");e&&(this.authToken=e,this.fetchUserData(e).catch(e=>{console.error("Error initializing local auth state:",e),this.setToken(null)}))}}async fetchUserData(e){try{let t=await fetch("/api/v1/auth/local/profile",{headers:{Authorization:"Bearer ".concat(e)}});if(!t.ok)throw Error("Failed to fetch user data");let r=await t.json(),a={uid:r.id,email:r.email,displayName:r.displayName||r.name||null,photoURL:r.photoURL||r.avatar||null,emailVerified:r.emailVerified||!1,isAnonymous:!1,settings:r.settings||{},is_active:r.is_active||!1,email_verified:r.emailVerified||!1,created_at:new Date(r.created_at||Date.now()),updated_at:new Date(r.updated_at||Date.now()),last_login_at:r.last_login_at?new Date(r.last_login_at):void 0,getIdToken:async()=>this.authToken||"",roles:r.roles||[],permissions:r.permissions||[]};this.setUser(a)}catch(e){throw console.error("Error fetching user data:",e),e}}constructor(){this.currentUser=null,this.listeners=[],this.authToken=null}}class l{async getCurrentUser(){return this.authState.getUser()}async signIn(e,t){try{let r=await fetch("/api/v1/auth/local/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(!r.ok){let e=await r.json();throw Error(e.message||"Failed to sign in")}let a=await r.json();this.authState.setToken(a.token),await this.authState.fetchUserData(a.token);let o=this.authState.getUser();if(!o)throw Error("Failed to get user after sign in");return o}catch(e){throw console.error("Local sign in error:",e),e}}async signInWithOAuth(e,t){try{let r=await fetch("/api/v1/auth/local/oauth/".concat(e),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t||{})});if(!r.ok){let t=await r.json();throw Error(t.message||"Failed to sign in with ".concat(e))}let a=await r.json();this.authState.setToken(a.token);let o={uid:a.user.uid,email:a.user.email,displayName:a.user.displayName,photoURL:a.user.photoURL,emailVerified:a.user.emailVerified,isAnonymous:!1,is_active:!0,email_verified:a.user.emailVerified,settings:a.user.settings||{},roles:a.user.roles||[],permissions:a.user.permissions||[],created_at:new Date(a.user.created_at),updated_at:new Date(a.user.updated_at),getIdToken:()=>Promise.resolve(this.authState.getToken()||"")};return this.authState.setUser(o),o}catch(t){throw console.error("Local ".concat(e," sign in error:"),t),t}}async signInWithGoogle(){return this.signInWithOAuth("google")}async signUp(e,t){try{let r=await fetch("/api/v1/auth/local/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(!r.ok){let e=await r.json();throw Error(e.message||"Failed to sign up")}let a=await r.json();this.authState.setToken(a.token),await this.authState.fetchUserData(a.token);let o=this.authState.getUser();if(!o)throw Error("Failed to get user after sign up");return o}catch(e){throw console.error("Local sign up error:",e),e}}async logout(){try{let e=this.authState.getToken();e&&await fetch("/api/v1/auth/local/logout",{method:"POST",headers:{Authorization:"Bearer ".concat(e)}}),this.authState.setToken(null),this.authState.setUser(null)}catch(e){throw console.error("Local logout error:",e),e}}async sendVerificationEmail(e){try{let e=this.authState.getToken();if(!e)throw Error("No authentication token available");let t=await fetch("/api/v1/auth/local/send-verification",{method:"POST",headers:{Authorization:"Bearer ".concat(e)}});if(!t.ok){let e=await t.json();throw Error(e.message||"Failed to send verification email")}}catch(e){throw console.error("Local send verification email error:",e),e}}async applyActionCode(e){try{let t=await fetch("/api/v1/auth/local/verify-email",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e})});if(!t.ok){let e=await t.json();throw Error(e.message||"Failed to verify email")}let r=this.authState.getToken();r&&await this.authState.fetchUserData(r)}catch(e){throw console.error("Local apply action code error:",e),e}}async sendPasswordResetEmail(e){try{let t=await fetch("/api/v1/auth/local/forgot-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})});if(!t.ok){let e=await t.json();throw Error(e.message||"Failed to send password reset email")}}catch(e){throw console.error("Local send password reset email error:",e),e}}async confirmPasswordReset(e,t,r){try{let a=await fetch("/api/v1/auth/local/reset-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e,password:t,email:r})});if(!a.ok){let e=await a.json();throw Error(e.message||"Failed to reset password")}}catch(e){throw console.error("Local confirm password reset error:",e),e}}async checkActionCode(e){try{let t=await fetch("/api/v1/auth/local/check-code",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e})});if(!t.ok){let e=await t.json();throw Error(e.message||"Invalid code")}return await t.json()}catch(e){throw console.error("Local check action code error:",e),e}}async getIdToken(){return this.authState.getToken()}onAuthStateChanged(e){return this.authState.addListener(e)}async refreshUserStatus(){try{let e=this.authState.getToken();if(!e)throw Error("No authentication token available");return await this.authState.fetchUserData(e),this.authState.getUser()}catch(e){throw console.error("Local refresh user status error:",e),e}}getAuthInstance(){return{currentUser:this.authState.getUser(),onAuthStateChanged:this.onAuthStateChanged.bind(this)}}constructor(){this.authState=h.getInstance(),this.authState.init()}}var u=r(9079);let d=function(){switch(function(){if(void 0!==u){let e="firebase";if(["firebase","local"].includes(e))return e}return"firebase"}()){case"firebase":default:return new c;case"local":return new l}}(),w=d.getAuthInstance(),g=(0,o.createContext)(null),p=e=>{var t;let{children:r}=e,[i,n]=(0,o.useState)(null),[s,c]=(0,o.useState)(!0);(0,o.useEffect)(()=>(c(!0),d.onAuthStateChanged(e=>{n(e),c(!1)})),[d]);let h=async(e,t)=>{try{await d.signIn(e,t)}catch(e){throw console.error("Error signing in:",e),e}},l=async(e,t)=>{try{return await d.signUp(e,t)}catch(e){throw console.error("Error signing up:",e),e}},u=async(e,t)=>{try{return await d.signInWithOAuth(e,t)}catch(t){throw console.error("Error signing in with ".concat(e,":"),t),t}},p=async()=>{try{return await u("google")}catch(e){throw console.error("Error signing in with Google:",e),e}},y=async()=>{try{await d.logout()}catch(e){throw console.error("Error signing out:",e),e}},f=async()=>{try{await d.sendVerificationEmail()}catch(e){throw console.error("Error sending verification email:",e),e}},m=async e=>{try{await d.sendPasswordResetEmail(e)}catch(e){throw console.error("Error sending password reset email:",e),e}},S=async(e,t,r)=>{try{await d.confirmPasswordReset(e,t,r)}catch(e){throw console.error("Error confirming password reset:",e),e}},E=async e=>{try{return await d.checkActionCode(e)}catch(e){throw console.error("Error checking action code:",e),e}},k=async e=>{try{await d.applyActionCode(e)}catch(e){throw console.error("Error applying action code:",e),e}},v=async()=>{try{return await d.getIdToken()}catch(e){return console.error("Error getting ID token:",e),null}},T=async()=>{try{return await d.refreshUserStatus()}catch(e){throw console.error("Error refreshing user status:",e),e}},I=!!i&&!i.emailVerified,_=!!i&&(null===(t=i.settings)||void 0===t?void 0:t.validated)!==!1;return(0,a.jsx)(g.Provider,{value:{user:i,loading:s,signIn:h,signUp:l,signInWithGoogle:p,logout:y,sendVerificationEmail:f,sendPasswordResetEmail:m,confirmPasswordReset:S,checkActionCode:E,applyActionCode:k,getIdToken:v,needsValidation:I,isActive:_,refreshUserStatus:T,auth:w,onAuthStateChanged:(e,t,r,a)=>"function"==typeof t?d.onAuthStateChanged(t):d.onAuthStateChanged(e=>{e&&t.next?t.next(e):!e&&r?r(Error("User is null")):a&&a()})},children:!s&&r})},y=()=>{let e=(0,o.useContext)(g);if(!e)throw Error("useAuth must be used within an AuthProvider");return e}}}]);