/* Import third-party CSS files */
@import 'react-image-crop/dist/ReactCrop.css';
@import 'easymde/dist/easymde.min.css';
/* Novel editor styles */
@import 'katex/dist/katex.min.css';

/* Novel editor custom styles */
.novel-editor-wrapper {
  position: relative;
  background-color: white;
  border-radius: 0.5rem;
}

.novel-editor-wrapper .ProseMirror {
  min-height: 300px;
  padding: 1rem;
  border-radius: 0.5rem;
  outline: none;
}

/* Placeholder styling for all empty paragraphs */
.novel-editor-wrapper .ProseMirror p.is-editor-empty::before,
.novel-editor-wrapper .ProseMirror p.is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: #adb5bd;
  pointer-events: none;
  height: 0;
  opacity: 0.5;
}

/* Placeholder styling for headings */
.novel-editor-wrapper .ProseMirror h1.is-empty::before,
.novel-editor-wrapper .ProseMirror h2.is-empty::before,
.novel-editor-wrapper .ProseMirror h3.is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: #64748b;
  pointer-events: none;
  height: 0;
  font-style: normal;
  font-weight: 500;
  opacity: 0.8;
}

.novel-editor-wrapper .ProseMirror h1 {
  font-size: 2em;
  font-weight: bold;
  margin-top: 0.67em;
  margin-bottom: 0.67em;
}

.novel-editor-wrapper .ProseMirror h2 {
  font-size: 1.5em;
  font-weight: bold;
  margin-top: 0.83em;
  margin-bottom: 0.83em;
}

.novel-editor-wrapper .ProseMirror h3 {
  font-size: 1.17em;
  font-weight: bold;
  margin-top: 1em;
  margin-bottom: 1em;
}

.novel-editor-wrapper .ProseMirror ul,
.novel-editor-wrapper .ProseMirror ol {
  padding-left: 2rem;
}

.novel-editor-wrapper .ProseMirror ul {
  list-style-type: disc;
}

.novel-editor-wrapper .ProseMirror ol {
  list-style-type: decimal;
}

.novel-editor-wrapper .ProseMirror a {
  color: #2563eb;
  text-decoration: underline;
}

.novel-editor-wrapper .ProseMirror blockquote {
  border-left: 4px solid #e5e7eb;
  padding-left: 1rem;
  font-style: italic;
  margin-left: 0;
  margin-right: 0;
}

.novel-editor-wrapper .ProseMirror pre {
  background-color: #f3f4f6;
  padding: 0.75rem;
  border-radius: 0.5rem;
  overflow-x: auto;
}

.novel-editor-wrapper .ProseMirror code {
  font-family: monospace;
  background-color: #f3f4f6;
  padding: 0.2rem 0.4rem;
  border-radius: 0.25rem;
  font-size: 0.875em;
}

.novel-editor-wrapper .ProseMirror hr {
  border: none;
  border-top: 2px solid #e5e7eb;
  margin: 2rem 0;
}

/* Task list styles */
.novel-editor-wrapper .ProseMirror ul[data-type="taskList"] {
  list-style-type: none !important;
  padding-left: 1rem;
}

/* Task list styles - comprehensive solution targeting all possible selectors */

/* Base styles for task lists */
.novel-editor-wrapper .ProseMirror ul.task-list,
.novel-editor-wrapper .ProseMirror ul[data-type="taskList"] {
  list-style-type: none !important;
  padding-left: 1rem;
  margin: 0.5em 0;
}

/* Target all possible task item selectors */
.novel-editor-wrapper .ProseMirror li.task-item,
.novel-editor-wrapper .ProseMirror li[data-type="taskItem"],
.novel-editor-wrapper .ProseMirror li[data-checked="true"],
.novel-editor-wrapper .ProseMirror li[data-checked="false"] {
  display: flex !important;
  align-items: center !important;
  margin-bottom: 0.5em;
  background-color: transparent !important;
}

/* Style all possible checkbox selectors */
.novel-editor-wrapper .ProseMirror li[data-checked] input[type="checkbox"],
.novel-editor-wrapper .ProseMirror li.task-item input[type="checkbox"],
.novel-editor-wrapper .ProseMirror li[data-type="taskItem"] input[type="checkbox"] {
  margin-right: 0.5em;
  flex-shrink: 0;
  cursor: pointer;
}

/* Style all possible label selectors */
.novel-editor-wrapper .ProseMirror li[data-checked] > label,
.novel-editor-wrapper .ProseMirror li.task-item > label,
.novel-editor-wrapper .ProseMirror li[data-type="taskItem"] > label {
  display: inline-flex;
  align-items: center;
  margin-right: 0.5em;
}

/* Make all paragraphs inside task items inline */
.novel-editor-wrapper .ProseMirror li[data-checked] p,
.novel-editor-wrapper .ProseMirror li.task-item p,
.novel-editor-wrapper .ProseMirror li[data-type="taskItem"] p {
  display: inline;
  margin: 0;
  background-color: transparent !important;
}

/* Fix for spans inside task items */
.novel-editor-wrapper .ProseMirror li[data-checked] span,
.novel-editor-wrapper .ProseMirror li.task-item span,
.novel-editor-wrapper .ProseMirror li[data-type="taskItem"] span {
  display: inline;
  background-color: transparent !important;
}

/* Remove any background colors from all elements inside task items */
.novel-editor-wrapper .ProseMirror li[data-checked] *,
.novel-editor-wrapper .ProseMirror li.task-item *,
.novel-editor-wrapper .ProseMirror li[data-type="taskItem"] * {
  background-color: transparent !important;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-start-rgb));
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Navigation loading indicator animations */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes progress {
  0% {
    width: 0%;
    margin-left: 0;
  }
  50% {
    width: 60%;
    margin-left: 20%;
  }
  100% {
    width: 100%;
    margin-left: 0;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-progress {
  animation: progress 1.5s ease-in-out infinite;
  width: 100%;
}
